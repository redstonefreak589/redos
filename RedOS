--Variables (For random stuff)
local yPos = 3
local xPos = 1
local currentVersion = "3.2"
local debug = false

--Functions
function setColors(backColor, textColor)
	term.setBackgroundColor(backColor)
	term.setTextColor(textColor)
end

function printY(text, yLoc2)
	term.setCursorPos(1, yLoc2)
	print(text)
	if yLoc2 == yPos+1 then
		yPos = yPos+1
	end
end

local function downloadFiles(url, path)
for i = 1, 3 do
  local response = http.get(url)
  if response then
   local data = response.readAll()
   if path then
    local f = io.open(path, "w")
    f:write(data)
    f:close()
    sleep(2)
    installing = "false"
    centerPrint("Download success!")
   end
   return true
  end
end
print("download: Download failed")
error()
return false
end

function checkForUpdates(updateUrl)
	for i = 1, 3 do
		local response = http.get(updateUrl)
		if response then
			local data = response.readAll()
			if data ~= currentVersion then
				term.setCursorPos(1,1)
				term.clearLine()
				setColors(colors.white, colors.cyan)
				term.clear()
				centerPrint("Updating OS...", 1)
				paintutils.drawLine(1, 2, w, 2, colors.blue)
				sleep(2)
				if not fs.exists("/installer") then
					downloadFiles("https://raw.github.com/redstonefreak589/redos/master/installer", "/installer")
				end
				shell.run("/installer")
			end
		end
	end
end

function centerPrint(text, yPos)
  w, h = term.getSize()
  term.setCursorPos(math.floor(w-text:len())/2, yPos)
  print(text)
end

function writeY(text, yLoc)
	term.setCursorPos(1, yLoc)
	write(text)
	if yLoc == yPos+1 then
		yPos = yPos+1
	end
end

--Main Code
function main()
	os.loadAPI(".redos/os/hashing")
	if fs.exists(".redos/themes") and fs.isDir(".redos/themes") then
	else
		fs.makeDir(".redos/themes")
	end
	yPos = 3
	w, h = term.getSize()
	setColors(colors.white, colors.cyan)
	term.clear()
	centerPrint("Welcome To RedOS Login!", 1)
	paintutils.drawLine(1, 2, w, 2, colors.blue)
	if debug == false then
		checkForUpdates("https://raw.github.com/redstonefreak589/redos/master/version")
	end
	setColors(colors.white, colors.cyan)
	centerPrint("RedOS Login System", 8)
	sleep(2)
	term.setCursorPos(1,3)
	printY("RedOS Login", 2)
	if fs.exists(".redos/login/user") then
		printY("Username", 3)
	else
		printY("Type in your new Username", 3)
	end
	writeY("> ", yPos+1)
	input = read()
	if fs.exists(".redos/login/user") then
		h = fs.open(".redos/login/user", "r")
		userName = h.readAll()
		h.close()
		if input == userName then
			term.setCursorPos(1,3)
			print("Password")
			yPos = yPos-1
			term.setCursorPos(1,4)
			term.clearLine()
			writeY("> ", yPos+1)
			input2 = read("*")
			if fs.exists(".redos/login/pass") then
				--[[h = fs.open(".redos/login/pass", "r")
				password = h.readAll()
				h.close()
				if input2 == password then
				]]--	
				hashedPassword = hashing.SHA1(input2)
				f = fs.open(".redos/login/pass", "r")
				pass = f.readAll()
				f.close()
				if hashedPassword == pass then
					printY("Login Confirmed! Loading desktop...", yPos+1)
					sleep(2)
					if fs.exists(".redos/os/desktop") then
						shell.run(".redos/os/desktop")
					else
						term.setBackgroundColor(colors.black)
						term.clear()
						term.setCursorPos(1,1)
						print("desktop: OS corrupt; destop file not present")
					end
				else
					printY("Password incorrect!", yPos+1)
					sleep(2)
					main()
				end
			end
		else
			printY("Username incorrect!", yPos+1)
			sleep(2)
			main()
		end
	else
		if not fs.exists(".redos/login") then
			fs.makeDir(".redos")
			fs.makeDir(".redos/login")
		end
		h = fs.open(".redos/login/user", "w")
		printY("Creating new user file", yPos+1)
		h.write(input)
		h.close()
		printY("Type in your new password", yPos+1)
		writeY("> ", yPos+1)
		newP = read("*")
		h = fs.open(".redos/login/pass", "w")
		h.write(hashing.SHA1(newP))
		h.close()
		term.setCursorPos(1,8)
		term.clearLine()
		printY("Password File generated!", yPos+1)
		printY("OS rebooting...", yPos+1)
		sleep(2)
		os.reboot()
	end
end

main()